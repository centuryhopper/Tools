.DS_Store
__pycache__
secrets.py
**/*.env
secrets.json
**/script_execution_records/*
**/amazon_products_outputs/*
**/PeopleFirstCareersOutput/*
**/test/*
**/PeopleFirstCareersOutput/*
gmail_delete_service_secrets.json
**/token files/*

**/raylib/*
*.swp
*.*~
project.lock.json
.DS_Store
*.pyc
nupkg/

# Visual Studio Code
.vscode

# Rider
.idea

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
msbuild.log
msbuild.err
msbuild.wrn

# Visual Studio 2015
.vs/

**/test/*
**/token_files/*
# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb


# npm related below
# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# VS Code Extension Build Output
out/
dist/
.vscode-test/
.vsix/

# IDEs and Editors
.vscode/
.idea/
*.sw?

# OS files
.DS_Store
Thumbs.db

# Build artifacts
*.tgz

# Logs
*.log

# Environment files
.env
.env.*

# Coverage / test output
coverage/
*.lcov

