@inject IHttpContextAccessor httpContextAccessor

@{
    const string APP_THEME = "light";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Portfolio</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/DotnetUserManagementSystem.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Standard.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @* <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.21/js/jquery.dataTables.min.js" integrity="sha512-BkpSL20WETFylMrcirBahHfSnY++H2O1W+UnEEO4yNIl+jI2+zowyoGJpbtk6bx97fBXf++WJHSSK2MV4ghPcg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script> *@
    
    <link rel="stylesheet" href="//cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <script type="text/javascript" type="text/css" src="//cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="~/DotnetUserManagementSystem.styles.css" asp-append-version="true" />
</head>
<body>
    <header id="fwc-header">
            <div class="top-space"></div>
            <div id="misc-div1" class="">
                <label id="lblEnvironment" class="env-sty"></label>
                <div id="title-text" class="page-title">
                    <div class="container-fluid">
                        <a class="logo-placement" href="">
                        @* <img src="~/images/logo-fwc-gl.png" alt="Florida My Logo" class="logo-img" /> *@
                        </a>
                        <span style="padding-left: 120px;">
                            Leo's Personal User Management System
                        </span>
                    </div>
                </div>
            </div>
            <br />
            <nav class="navbar navbar-expand-lg navbar-@APP_THEME">
                <div class="container-fluid">
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                        <div class="navbar-nav">
                            @Html.ActionLink("Home", "Index", "Home", null, new { @class = "nav-link" })
                            @Html.ActionLink("Users", "Index", "Users", null, new { @class = "nav-link" })
                            @Html.ActionLink("Roles", "Index", "Roles", null, new { @class = "nav-link" })
                            @if (httpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
                            {
                                @Html.ActionLink("My Profile", "Profile", "Account", null, new { @class = "nav-link" })
                            }
                            <partial name="_LoginPartial" />
                        </div>
                    </div>
                </div>
            </nav>
        </header>
    <div class="container">
        <main role="main" class="pb-3" style="position: relative;
  min-height: 100vh;">
            @RenderBody()
        </main>
    </div>
    @* <div id="footer-container" class="footer-special"> *@
    <div id="footer-container">
        <footer id="fwc-footer">
            <div class="version-foot-style">
                &copy; @DateTime.Now.Year - UserManagement System
                <br>
                All rights reserved.
            </div>
        </footer>
    </div>
    @* <script src="~/lib/jquery/dist/jquery.min.js"></script> *@
    @* <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script> *@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    @* track session time after user logs in *@
    @if (httpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
    {
        <script>
            var seconds;
            $.ajax({
                type: "GET",
                url: '@Url.Action("Time", "Home")',
                async: false,
                success: function (response) {
                    seconds = response;
                    //console.log(response);
    
                    setTimeout(function(){
                        //alert('Your session will expire in 5 minutes. Please save your work and refresh the page to continue.')
    
                        swal.fire("Heads up!", "Your session will expire in 5 minutes, so please save your work and refresh the page to continue.", "warning");
    
                    }, (seconds - 300) * 1000)
                },
                error: function (response) {
                    //alert(response.responseText);
                    //swal.fire("", response.responseText, "error");
                }
            });
    
            setInterval(function()
            {
                seconds = seconds - 1;
                //console.log(seconds);
    
                if (seconds === 0)
                {
                    swal.fire("Notice", "Your session has expired, so please log back in.", "error");
    
                    window.location.href = "/Account/LogOut";
                
                    location.reload()
                }
            }, 1000);
        </script>
    }
 
    @* shared modal popups by all views *@
    <script type="text/javascript">
        $(function () {
    
            $('.shadow_on_hover').hover(
                function(){
                    $(this).css('box-shadow', '0px 0px 10px rgba(0, 0, 0, 0.5)');
                },
                function(){
                    $(this).css('box-shadow', 'none'); // Reset shadow
                }
            );
    
            $(window).on('resize', () => {
                let appname = $('.app-name')
                //console.log(window.innerWidth);
            
                if (window.innerWidth <= 725)
                {
                    appname.html('')
                }
                else
                {
                    appname.html('')
                }
            });
    
            // global popup
            let msg = '@(TempData[TempDataKeys.ALERT_SUCCESS])'
            if (msg)
            {
                swal.fire("", msg, "success");
            }
    
            msg = '@(TempData[TempDataKeys.ALERT_WARNING])'
            if (msg)
            {
                msg = msg.split('$$$')
                const warnings = msg.map(err => `<li>${err}</li>`).join("\n")
                //swal.fire("", msg, "warning");
                Swal.fire({
                    title: "<div>Warning</div>",
                    icon: "warning",
                    html: `
                        <div style="height: 200px; overflow: auto;">
                            <ul>
                                ${warnings}
                            </ul>
                        </div>
                    `,
                    showCloseButton: true,
                    focusConfirm: false,
                    confirmButtonText: `
                        Okay
                    `,
                });
    
            }
    
            msg = '@(TempData[TempDataKeys.ALERT_WARNING_PROMPT])'
            if (msg)
            {
                swal.fire("", msg, "warning");
            }
    
            msg = '@(TempData[TempDataKeys.ALERT_ERROR])'
            if (msg)
            {
                msg = msg.split('$$$')
                const errors = msg.map(err => `<li>${err}</li>`).join("\n")
                Swal.fire({
                    title: "<div>Please Correct Errors before submitting.</div>",
                    icon: "error",
                    html: `
                        <div style="height: 200px; overflow: auto;">
                            <ul>
                                ${errors}
                            </ul>
                        </div>
                    `,
                    showCloseButton: true,
                    focusConfirm: false,
                    confirmButtonText: `
                        Okay
                    `,
                });
            }
    
        });          
    </script>
</body>
</html>
